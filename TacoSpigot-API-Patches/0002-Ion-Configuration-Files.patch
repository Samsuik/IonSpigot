From da8d8ad60d1432a0f3e392824c0bc5f65e5da5a2 Mon Sep 17 00:00:00 2001
From: SuicidalKids <kfian294ma4@gmail.com>
Date: Tue, 15 Sep 2020 05:04:13 +0100
Subject: [PATCH] Ion Configuration Files


diff --git a/src/main/java/co/aikar/timings/TimingsExport.java b/src/main/java/co/aikar/timings/TimingsExport.java
index fe19ea00..1898c167 100644
--- a/src/main/java/co/aikar/timings/TimingsExport.java
+++ b/src/main/java/co/aikar/timings/TimingsExport.java
@@ -202,7 +202,9 @@ class TimingsExport extends Thread {
         parent.put("config", createObject(
             pair("spigot", mapAsJSON(Bukkit.spigot().getSpigotConfig(), null)),
             pair("bukkit", mapAsJSON(Bukkit.spigot().getBukkitConfig(), null)),
-            pair("paperspigot", mapAsJSON(Bukkit.spigot().getPaperSpigotConfig(), null))
+            pair("paperspigot", mapAsJSON(Bukkit.spigot().getPaperSpigotConfig(), null)),
+            pair("tacospigot", mapAsJSON(Bukkit.spigot().getTacoSpigotConfig(), null)), // IonSpigot - Fill in for tacospigot
+            pair("ion", mapAsJSON(Bukkit.spigot().getIonConfig(), null)) // IonSpigot
         ));
 
         new TimingsExport(sender, parent, history).start();
diff --git a/src/main/java/org/bukkit/Server.java b/src/main/java/org/bukkit/Server.java
index 1b62463a..83ba099d 100644
--- a/src/main/java/org/bukkit/Server.java
+++ b/src/main/java/org/bukkit/Server.java
@@ -973,6 +973,18 @@ public interface Server extends PluginMessageRecipient {
             throw new UnsupportedOperationException("Not supported yet.");
         }
 
+        // IonSpigot start - Configuration Files
+        public org.bukkit.configuration.file.YamlConfiguration getTacoSpigotConfig()
+        {
+            throw new UnsupportedOperationException("Not supported yet.");
+        }
+
+        public org.bukkit.configuration.file.YamlConfiguration getIonConfig()
+        {
+            throw new UnsupportedOperationException("Not supported yet.");
+        }
+        // IonSpigot end
+
         /**
          * Sends the component to the player
          *
diff --git a/src/main/java/org/bukkit/command/defaults/VersionCommand.java b/src/main/java/org/bukkit/command/defaults/VersionCommand.java
index 42da60a8..33148e53 100644
--- a/src/main/java/org/bukkit/command/defaults/VersionCommand.java
+++ b/src/main/java/org/bukkit/command/defaults/VersionCommand.java
@@ -33,6 +33,12 @@ import java.io.InputStreamReader;
 import java.net.HttpURLConnection;
 // TacoSpigot end
 
+// IonSpigot start
+import net.md_5.bungee.api.chat.*;
+import java.io.InputStream;
+import java.util.Properties;
+// IonSpigot end
+
 public class VersionCommand extends BukkitCommand {
     public VersionCommand(String name) {
         super(name);
@@ -40,7 +46,7 @@ public class VersionCommand extends BukkitCommand {
         this.description = "Gets the version of this server including any plugins in use";
         this.usageMessage = "/version [plugin name]";
         this.setPermission("bukkit.command.version");
-        this.setAliases(Arrays.asList("ver", "about"));
+        this.setAliases(Arrays.asList("ionver", "ver", "about")); // IonSpigot - additional version alias
     }
 
     @Override
@@ -48,9 +54,20 @@ public class VersionCommand extends BukkitCommand {
         if (!testPermission(sender)) return true;
 
         if (args.length == 0) {
+            // IonSpigot start
+            /*
             sender.sendMessage("This server is running " + Bukkit.getName() + " version " + Bukkit.getVersion() + " (Implementing API version " + Bukkit.getBukkitVersion() + ")");
             sendVersion(sender);
-        } else {
+            */
+            sender.sendMessage(translate(
+                    "&8/&7&m-------------------&8[&b Version &8]&7&m-------------------&8\\",
+                    "&fThis &eserver&f is running &bIon&dSpigot",
+                    "&fVersion&7: &b" + Bukkit.getVersion(),
+                    "&fAPI&7: &e" + Bukkit.getBukkitVersion(),
+                    "&8\\&7&m-----------------------------------------------&8/"
+            ));
+            // IonSpigot end
+        } else if (sender.isOp()) { // IonSpigot
             StringBuilder name = new StringBuilder();
 
             for (String arg : args) {
@@ -84,6 +101,30 @@ public class VersionCommand extends BukkitCommand {
         }
         return true;
     }
+    // IonSpigot start
+    public static BaseComponent[] translate(String... strings) {
+        ComponentBuilder componentBuilder = new ComponentBuilder("");
+
+        for (int i = 0; i < strings.length; i++) {
+            if (i != 0) {
+                componentBuilder.append("\n");
+            }
+
+            componentBuilder.append(ChatColor.translateAlternateColorCodes('&', strings[i]));
+            link(componentBuilder);
+        }
+
+        return componentBuilder.create();
+    }
+
+    private static void link(ComponentBuilder componentBuilder) {
+        componentBuilder.event(new HoverEvent(HoverEvent.Action.SHOW_TEXT,  TextComponent.fromLegacyText(ChatColor.translateAlternateColorCodes('&',
+                "&fClick here to be &blinked&f to our &dGitHub"
+        ))));
+
+        componentBuilder.event(new ClickEvent(ClickEvent.Action.OPEN_URL, "https://github.com/SuicidalKids/IonSpigot"));
+    }
+    // IonSpigot end
 
     private void describeToSender(Plugin plugin, CommandSender sender) {
         PluginDescriptionFile desc = plugin.getDescription();
@@ -134,7 +175,7 @@ public class VersionCommand extends BukkitCommand {
         Validate.notNull(args, "Arguments cannot be null");
         Validate.notNull(alias, "Alias cannot be null");
 
-        if (args.length == 1) {
+        if (args.length == 1 && sender.isOp()) { // IonSpigot
             List<String> completions = new ArrayList<String>();
             String toComplete = args[0].toLowerCase();
             for (Plugin plugin : Bukkit.getPluginManager().getPlugins()) {
diff --git a/src/main/java/org/bukkit/configuration/MemorySection.java b/src/main/java/org/bukkit/configuration/MemorySection.java
index 0e2b26a9..81746388 100644
--- a/src/main/java/org/bukkit/configuration/MemorySection.java
+++ b/src/main/java/org/bukkit/configuration/MemorySection.java
@@ -339,17 +339,19 @@ public class MemorySection implements ConfigurationSection {
     // PaperSpigot start - Add getFloat
     public float getFloat(String path) {
         Object def = getDefault(path);
-        return getFloat(path, (def instanceof Float) ? toFloat(def) : 0);
+        // IonSpigot start - Fix float always returning default value
+        return getFloat(path, (def instanceof Number) ? toFloat(def) : 0);
     }
 
     public float getFloat(String path, float def) {
         Object val = get(path, def);
-        return (val instanceof Float) ? toFloat(val) : def;
+        return (val instanceof Number) ? toFloat(val) : def;
     }
 
     public boolean isFloat(String path) {
         Object val = get(path);
-        return val instanceof Float;
+        return val instanceof Number;
+        // IonSpigot end
     }
     // PaperSpigot end
 
-- 
2.29.2.windows.2

