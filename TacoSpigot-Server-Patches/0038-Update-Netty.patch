From b2506ccf40f55fc349ca47b89eab42da60a88808 Mon Sep 17 00:00:00 2001
From: "kfian294ma4@gmail.com" <kfian294ma4@gmail.com>
Date: Sun, 15 Aug 2021 20:07:31 +0100
Subject: [PATCH] Update Netty


diff --git a/pom.xml b/pom.xml
index 42f3b86d7..f968661ac 100644
--- a/pom.xml
+++ b/pom.xml
@@ -29,6 +29,12 @@
     </parent>
 
     <dependencies>
+        <!-- IonSpigot - Update netty -->
+        <dependency>
+            <groupId>io.netty</groupId>
+            <artifactId>netty-all</artifactId>
+            <version>4.1.66.Final</version>
+        </dependency>
         <dependency>
             <groupId>org.apache.commons</groupId>
             <artifactId>commons-lang3</artifactId>
diff --git a/src/main/java/net/minecraft/server/PacketDataSerializer.java b/src/main/java/net/minecraft/server/PacketDataSerializer.java
index 21ab829a6..a73d78b62 100644
--- a/src/main/java/net/minecraft/server/PacketDataSerializer.java
+++ b/src/main/java/net/minecraft/server/PacketDataSerializer.java
@@ -19,12 +19,17 @@ import java.nio.ByteOrder;
 import java.nio.channels.GatheringByteChannel;
 import java.nio.channels.ScatteringByteChannel;
 import java.nio.charset.Charset;
+import java.nio.charset.StandardCharsets;
 import java.util.UUID;
 
 import org.bukkit.craftbukkit.inventory.CraftItemStack; // CraftBukkit
 // TacoSpigot start
 import net.techcable.tacospigot.CompatHacks;
 // TacoSpigot end
+// IonSpigot start
+import io.netty.util.ByteProcessor;
+import java.nio.channels.FileChannel;
+// IonSpigot end
 
 public class PacketDataSerializer extends ByteBuf {
 
@@ -239,7 +244,10 @@ public class PacketDataSerializer extends ByteBuf {
         } else if (j < 0) {
             throw new DecoderException("The received encoded string buffer length is less than zero! Weird string!");
         } else {
-            String s = new String(this.readBytes(j).array(), Charsets.UTF_8);
+            // IonSpigot start - Update netty
+            String s = this.toString(this.readerIndex(), j, StandardCharsets.UTF_8);
+            this.readerIndex(this.readerIndex() + j);
+            // IonSpigot end - Update netty
 
             if (s.length() > i) {
                 throw new DecoderException("The received string length is longer than maximum allowed (" + j + " > " + i + ")");
@@ -293,6 +301,15 @@ public class PacketDataSerializer extends ByteBuf {
         return this.a.isDirect();
     }
 
+    // IonSpigot start - Update netty
+    public boolean isReadOnly() {
+        return this.a.isReadOnly();
+    }
+
+    public ByteBuf asReadOnly() {
+        return this.a.asReadOnly();
+    }
+
     public int readerIndex() {
         return this.a.readerIndex();
     }
@@ -393,30 +410,58 @@ public class PacketDataSerializer extends ByteBuf {
         return this.a.getShort(i);
     }
 
+    public short getShortLE(int i) {
+        return this.a.getShortLE(i);
+    }
+
     public int getUnsignedShort(int i) {
         return this.a.getUnsignedShort(i);
     }
 
+    public int getUnsignedShortLE(int i) {
+        return this.a.getUnsignedShortLE(i);
+    }
+
     public int getMedium(int i) {
         return this.a.getMedium(i);
     }
 
+    public int getMediumLE(int i) {
+        return this.a.getMediumLE(i);
+    }
+
     public int getUnsignedMedium(int i) {
         return this.a.getUnsignedMedium(i);
     }
 
+    public int getUnsignedMediumLE(int i) {
+        return this.a.getUnsignedMediumLE(i);
+    }
+
     public int getInt(int i) {
         return this.a.getInt(i);
     }
 
+    public int getIntLE(int i) {
+        return this.a.getIntLE(i);
+    }
+
     public long getUnsignedInt(int i) {
         return this.a.getUnsignedInt(i);
     }
 
+    public long getUnsignedIntLE(int i) {
+        return this.a.getUnsignedIntLE(i);
+    }
+
     public long getLong(int i) {
         return this.a.getLong(i);
     }
 
+    public long getLongLE(int i) {
+        return this.a.getLongLE(i);
+    }
+
     public char getChar(int i) {
         return this.a.getChar(i);
     }
@@ -461,6 +506,14 @@ public class PacketDataSerializer extends ByteBuf {
         return this.a.getBytes(i, gatheringbytechannel, j);
     }
 
+    public int getBytes(int i, FileChannel filechannel, long j, int k) throws IOException {
+        return this.a.getBytes(i, filechannel, j, k);
+    }
+
+    public CharSequence getCharSequence(int i, int j, Charset charset) {
+        return this.a.getCharSequence(i, j, charset);
+    }
+
     public ByteBuf setBoolean(int i, boolean flag) {
         return this.a.setBoolean(i, flag);
     }
@@ -473,18 +526,34 @@ public class PacketDataSerializer extends ByteBuf {
         return this.a.setShort(i, j);
     }
 
+    public ByteBuf setShortLE(int i, int j) {
+        return this.a.setShortLE(i, j);
+    }
+
     public ByteBuf setMedium(int i, int j) {
         return this.a.setMedium(i, j);
     }
 
+    public ByteBuf setMediumLE(int i, int j) {
+        return this.a.setMediumLE(i, j);
+    }
+
     public ByteBuf setInt(int i, int j) {
         return this.a.setInt(i, j);
     }
 
+    public ByteBuf setIntLE(int i, int j) {
+        return this.a.setIntLE(i, j);
+    }
+
     public ByteBuf setLong(int i, long j) {
         return this.a.setLong(i, j);
     }
 
+    public ByteBuf setLongLE(int i, long j) {
+        return this.a.setLongLE(i, j);
+    }
+
     public ByteBuf setChar(int i, int j) {
         return this.a.setChar(i, j);
     }
@@ -529,10 +598,18 @@ public class PacketDataSerializer extends ByteBuf {
         return this.a.setBytes(i, scatteringbytechannel, j);
     }
 
+    public int setBytes(int i, FileChannel filechannel, long j, int k) throws IOException {
+        return this.a.setBytes(i, filechannel, j, k);
+    }
+
     public ByteBuf setZero(int i, int j) {
         return this.a.setZero(i, j);
     }
 
+    public int setCharSequence(int i, CharSequence charsequence, Charset charset) {
+        return this.a.setCharSequence(i, charsequence, charset);
+    }
+
     public boolean readBoolean() {
         return this.a.readBoolean();
     }
@@ -549,30 +626,58 @@ public class PacketDataSerializer extends ByteBuf {
         return this.a.readShort();
     }
 
+    public short readShortLE() {
+        return this.a.readShortLE();
+    }
+
     public int readUnsignedShort() {
         return this.a.readUnsignedShort();
     }
 
+    public int readUnsignedShortLE() {
+        return this.a.readUnsignedShortLE();
+    }
+
     public int readMedium() {
         return this.a.readMedium();
     }
 
+    public int readMediumLE() {
+        return this.a.readMediumLE();
+    }
+
     public int readUnsignedMedium() {
         return this.a.readUnsignedMedium();
     }
 
+    public int readUnsignedMediumLE() {
+        return this.a.readUnsignedMediumLE();
+    }
+
     public int readInt() {
         return this.a.readInt();
     }
 
+    public int readIntLE() {
+        return this.a.readIntLE();
+    }
+
     public long readUnsignedInt() {
         return this.a.readUnsignedInt();
     }
 
+    public long readUnsignedIntLE() {
+        return this.a.readUnsignedIntLE();
+    }
+
     public long readLong() {
         return this.a.readLong();
     }
 
+    public long readLongLE() {
+        return this.a.readLongLE();
+    }
+
     public char readChar() {
         return this.a.readChar();
     }
@@ -593,6 +698,10 @@ public class PacketDataSerializer extends ByteBuf {
         return this.a.readSlice(i);
     }
 
+    public ByteBuf readRetainedSlice(int i) {
+        return this.a.readRetainedSlice(i);
+    }
+
     public ByteBuf readBytes(ByteBuf bytebuf) {
         return this.a.readBytes(bytebuf);
     }
@@ -625,6 +734,14 @@ public class PacketDataSerializer extends ByteBuf {
         return this.a.readBytes(gatheringbytechannel, i);
     }
 
+    public CharSequence readCharSequence(int i, Charset charset) {
+        return this.a.readCharSequence(i, charset);
+    }
+
+    public int readBytes(FileChannel filechannel, long i, int j) throws IOException {
+        return this.a.readBytes(filechannel, i, j);
+    }
+
     public ByteBuf skipBytes(int i) {
         return this.a.skipBytes(i);
     }
@@ -641,18 +758,34 @@ public class PacketDataSerializer extends ByteBuf {
         return this.a.writeShort(i);
     }
 
+    public ByteBuf writeShortLE(int i) {
+        return this.a.writeShortLE(i);
+    }
+
     public ByteBuf writeMedium(int i) {
         return this.a.writeMedium(i);
     }
 
+    public ByteBuf writeMediumLE(int i) {
+        return this.a.writeMediumLE(i);
+    }
+
     public ByteBuf writeInt(int i) {
         return this.a.writeInt(i);
     }
 
+    public ByteBuf writeIntLE(int i) {
+        return this.a.writeIntLE(i);
+    }
+
     public ByteBuf writeLong(long i) {
         return this.a.writeLong(i);
     }
 
+    public ByteBuf writeLongLE(long i) {
+        return this.a.writeLongLE(i);
+    }
+
     public ByteBuf writeChar(int i) {
         return this.a.writeChar(i);
     }
@@ -697,10 +830,18 @@ public class PacketDataSerializer extends ByteBuf {
         return this.a.writeBytes(scatteringbytechannel, i);
     }
 
+    public int writeBytes(FileChannel filechannel, long i, int j) throws IOException {
+        return this.a.writeBytes(filechannel, i, j);
+    }
+
     public ByteBuf writeZero(int i) {
         return this.a.writeZero(i);
     }
 
+    public int writeCharSequence(CharSequence charsequence, Charset charset) {
+        return this.a.writeCharSequence(charsequence, charset);
+    }
+
     public int indexOf(int i, int j, byte b0) {
         return this.a.indexOf(i, j, b0);
     }
@@ -717,20 +858,20 @@ public class PacketDataSerializer extends ByteBuf {
         return this.a.bytesBefore(i, j, b0);
     }
 
-    public int forEachByte(ByteBufProcessor bytebufprocessor) {
-        return this.a.forEachByte(bytebufprocessor);
+    public int forEachByte(ByteProcessor byteprocessor) {
+        return this.a.forEachByte(byteprocessor);
     }
 
-    public int forEachByte(int i, int j, ByteBufProcessor bytebufprocessor) {
-        return this.a.forEachByte(i, j, bytebufprocessor);
+    public int forEachByte(int i, int j, ByteProcessor byteprocessor) {
+        return this.a.forEachByte(i, j, byteprocessor);
     }
 
-    public int forEachByteDesc(ByteBufProcessor bytebufprocessor) {
-        return this.a.forEachByteDesc(bytebufprocessor);
+    public int forEachByteDesc(ByteProcessor byteprocessor) {
+        return this.a.forEachByteDesc(byteprocessor);
     }
 
-    public int forEachByteDesc(int i, int j, ByteBufProcessor bytebufprocessor) {
-        return this.a.forEachByteDesc(i, j, bytebufprocessor);
+    public int forEachByteDesc(int i, int j, ByteProcessor byteprocessor) {
+        return this.a.forEachByteDesc(i, j, byteprocessor);
     }
 
     public ByteBuf copy() {
@@ -745,14 +886,26 @@ public class PacketDataSerializer extends ByteBuf {
         return this.a.slice();
     }
 
+    public ByteBuf retainedSlice() {
+        return this.a.retainedSlice();
+    }
+
     public ByteBuf slice(int i, int j) {
         return this.a.slice(i, j);
     }
 
+    public ByteBuf retainedSlice(int i, int j) {
+        return this.a.retainedSlice(i, j);
+    }
+
     public ByteBuf duplicate() {
         return this.a.duplicate();
     }
 
+    public ByteBuf retainedDuplicate() {
+        return this.a.retainedDuplicate();
+    }
+
     public int nioBufferCount() {
         return this.a.nioBufferCount();
     }
@@ -829,6 +982,15 @@ public class PacketDataSerializer extends ByteBuf {
         return this.a.retain();
     }
 
+    public ByteBuf touch() {
+        return this.a.touch();
+    }
+
+    public ByteBuf touch(Object object) {
+        return this.a.touch(object);
+        // IonSpigot end
+    }
+
     public int refCnt() {
         return this.a.refCnt();
     }
-- 
2.29.2.windows.2

