From dede651293ac38d8878d56940841930fe1fdd34f Mon Sep 17 00:00:00 2001
From: SuicidalKids <kfian294ma4@gmail.com>
Date: Thu, 29 Oct 2020 22:11:04 +0000
Subject: [PATCH] Add Intervals on Item Logic


diff --git a/src/main/java/me/suicidalkids/ion/IonWorldConfig.java b/src/main/java/me/suicidalkids/ion/IonWorldConfig.java
index 31899836d..67630ecc6 100644
--- a/src/main/java/me/suicidalkids/ion/IonWorldConfig.java
+++ b/src/main/java/me/suicidalkids/ion/IonWorldConfig.java
@@ -119,4 +119,13 @@ public class IonWorldConfig {
         silenceSounds = getBoolean("silence-sounds", false);
     }
 
+    public int noclipInterval;
+    public int mergeInterval;
+    public int hopperInterval;
+    private void Items() {
+        noclipInterval = getInterval("items.noclip-delay", 0);
+        mergeInterval = getInterval("items.merge-delay", 0);
+        hopperInterval = getInterval("items.hoppers.delay", 0);
+    }
+
 }
diff --git a/src/main/java/net/minecraft/server/EntityItem.java b/src/main/java/net/minecraft/server/EntityItem.java
index 34a51a5dd..918c1bdef 100644
--- a/src/main/java/net/minecraft/server/EntityItem.java
+++ b/src/main/java/net/minecraft/server/EntityItem.java
@@ -66,7 +66,7 @@ public class EntityItem extends Entity implements HopperPusher {
             this.die();
         } else {
             super.t_();
-            if (tryPutInHopper()) return; // TacoSpigot
+            if (ticksLived % world.ionConfig.hopperInterval == 0 && tryPutInHopper()) return; // IonSpigot - Add Interval // TacoSpigot
             // CraftBukkit start - Use wall time for pickup and despawn timers
             int elapsedTicks = MinecraftServer.currentTick - this.lastTick;
             if (this.pickupDelay != 32767) this.pickupDelay -= elapsedTicks;
@@ -78,7 +78,7 @@ public class EntityItem extends Entity implements HopperPusher {
             this.lastY = this.locY;
             this.lastZ = this.locZ;
             this.motY -= 0.03999999910593033D;
-            this.noclip = this.j(this.locX, (this.getBoundingBox().b + this.getBoundingBox().e) / 2.0D, this.locZ);
+            this.noclip = ticksLived % world.ionConfig.noclipInterval == 0 && this.j(this.locX, (this.getBoundingBox().b + this.getBoundingBox().e) / 2.0D, this.locZ); // IonSpigot
             this.move(this.motX, this.motY, this.motZ);
             boolean flag = (int) this.lastX != (int) this.locX || (int) this.lastY != (int) this.locY || (int) this.lastZ != (int) this.locZ;
 
@@ -90,7 +90,7 @@ public class EntityItem extends Entity implements HopperPusher {
                     this.makeSound("random.fizz", 0.4F, 2.0F + this.random.nextFloat() * 0.4F);
                 }
 
-                if (!this.world.isClientSide) {
+                if (!this.world.isClientSide && ticksLived % world.ionConfig.mergeInterval == 0) { // IonSpigot
                     this.w();
                 }
             }
@@ -132,7 +132,7 @@ public class EntityItem extends Entity implements HopperPusher {
     // Spigot start - copied from above
     @Override
     public void inactiveTick() {
-        if (tryPutInHopper()) return; // TacoSpigot
+        if (ticksLived % world.ionConfig.hopperInterval == 0 && tryPutInHopper()) return; // IonSpigot - Add Interval // TacoSpigot
         // CraftBukkit end
         // CraftBukkit start - Use wall time for pickup and despawn timers
         int elapsedTicks = MinecraftServer.currentTick - this.lastTick;
-- 
2.29.2.windows.2

